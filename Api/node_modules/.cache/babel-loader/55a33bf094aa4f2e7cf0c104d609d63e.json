{"ast":null,"code":"import _toConsumableArray from \"D:\\\\Doranco\\\\Node.js\\\\Projets\\\\RestApi\\\\Api\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"D:\\\\Doranco\\\\Node.js\\\\Projets\\\\RestApi\\\\Api\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\Doranco\\\\Node.js\\\\Projets\\\\RestApi\\\\Api\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Doranco\\\\Node.js\\\\Projets\\\\RestApi\\\\Api\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Doranco\\\\Node.js\\\\Projets\\\\RestApi\\\\Api\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Doranco\\\\Node.js\\\\Projets\\\\RestApi\\\\Api\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Doranco\\\\Node.js\\\\Projets\\\\RestApi\\\\Api\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Doranco\\\\Node.js\\\\Projets\\\\RestApi\\\\Api\\\\src\\\\pages\\\\Feed\\\\Feed.js\";\nimport React, { Component, Fragment } from 'react';\nimport Post from '../../components/Feed/Post/Post';\nimport Button from '../../components/Button/Button';\nimport FeedEdit from '../../components/Feed/FeedEdit/FeedEdit';\nimport Input from '../../components/Form/Input/Input';\nimport Paginator from '../../components/Paginator/Paginator';\nimport Loader from '../../components/Loader/Loader';\nimport ErrorHandler from '../../components/ErrorHandler/ErrorHandler';\nimport './Feed.css';\n\nvar Feed = /*#__PURE__*/function (_Component) {\n  _inherits(Feed, _Component);\n\n  function Feed() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Feed);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Feed)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isEditing: false,\n      posts: [],\n      totalPosts: 0,\n      editPost: null,\n      status: '',\n      postPage: 1,\n      postsLoading: true,\n      editLoading: false\n    };\n\n    _this.loadPosts = function (direction) {\n      if (direction) {\n        _this.setState({\n          postsLoading: true,\n          posts: []\n        });\n      }\n\n      var page = _this.state.postPage;\n\n      if (direction === 'next') {\n        page++;\n\n        _this.setState({\n          postPage: page\n        });\n      }\n\n      if (direction === 'previous') {\n        page--;\n\n        _this.setState({\n          postPage: page\n        });\n      }\n\n      var graphqlQuery = {\n        query: \"\\n        {\\n          posts(page: \".concat(page, \") {\\n            posts {\\n              _id\\n              title\\n              content\\n              creator {\\n                name\\n              }\\n              createdAt\\n            }\\n            totalPosts\\n          }\\n        }\\n      \")\n      };\n      fetch('http://localhost:8080/graphql', {\n        method: 'POST',\n        headers: {\n          Authorization: 'Bearer ' + _this.props.token,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(graphqlQuery)\n      }).then(function (res) {\n        return res.json();\n      }).then(function (resData) {\n        if (resData.errors) {\n          throw new Error('Fetching posts failed!');\n        }\n\n        _this.setState({\n          posts: resData.data.posts.posts.map(function (post) {\n            return _objectSpread({}, post, {\n              imagePath: post.imageUrl\n            });\n          }),\n          totalPosts: resData.data.posts.totalPosts,\n          postsLoading: false\n        });\n      }).catch(_this.catchError);\n    };\n\n    _this.statusUpdateHandler = function (event) {\n      event.preventDefault();\n      fetch('http://localhost:8080/auth/status', {\n        method: 'PATCH',\n        headers: {\n          Authorization: 'Bearer ' + _this.props.token,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          status: _this.state.status\n        })\n      }).then(function (res) {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Can't update status!\");\n        }\n\n        return res.json();\n      }).then(function (resData) {\n        console.log(resData);\n      }).catch(_this.catchError);\n    };\n\n    _this.newPostHandler = function () {\n      _this.setState({\n        isEditing: true\n      });\n    };\n\n    _this.startEditPostHandler = function (postId) {\n      _this.setState(function (prevState) {\n        var loadedPost = _objectSpread({}, prevState.posts.find(function (p) {\n          return p._id === postId;\n        }));\n\n        return {\n          isEditing: true,\n          editPost: loadedPost\n        };\n      });\n    };\n\n    _this.cancelEditHandler = function () {\n      _this.setState({\n        isEditing: false,\n        editPost: null\n      });\n    };\n\n    _this.finishEditHandler = function (postData) {\n      _this.setState({\n        editLoading: true\n      });\n\n      var formData = new FormData();\n      formData.append('title', postData.title);\n      formData.append('content', postData.content);\n      formData.append('image', postData.image);\n      var graphqlQuery = {\n        query: \"\\n        mutation {\\n          createPost(postInput: {title: \\\"\".concat(postData.title, \"\\\", content: \\\"\").concat(postData.content, \"\\\", imageUrl: \\\"some url\\\"}) {\\n            _id\\n            title\\n            content\\n            imageUrl\\n            creator {\\n              name\\n            }\\n            createdAt\\n          }\\n        }\\n      \")\n      };\n      fetch('http://localhost:8080/graphql', {\n        method: 'POST',\n        body: JSON.stringify(graphqlQuery),\n        headers: {\n          Authorization: 'Bearer ' + _this.props.token,\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (resData) {\n        if (resData.errors && resData.errors[0].status === 422) {\n          throw new Error(\"Validation failed. Make sure the email address isn't used yet!\");\n        }\n\n        if (resData.errors) {\n          throw new Error('User login failed!');\n        }\n\n        console.log(resData);\n        var post = {\n          _id: resData.data.createPost._id,\n          title: resData.data.createPost.title,\n          content: resData.data.createPost.content,\n          creator: resData.data.createPost.creator,\n          createdAt: resData.data.createPost.createdAt\n        };\n\n        _this.setState(function (prevState) {\n          var updatedPosts = _toConsumableArray(prevState.posts);\n\n          if (prevState.editPost) {\n            var postIndex = prevState.posts.findIndex(function (p) {\n              return p._id === prevState.editPost._id;\n            });\n            updatedPosts[postIndex] = post;\n          } else {\n            updatedPosts.pop();\n            updatedPosts.unshift(post);\n          }\n\n          return {\n            posts: updatedPosts,\n            isEditing: false,\n            editPost: null,\n            editLoading: false\n          };\n        });\n      }).catch(function (err) {\n        console.log(err);\n\n        _this.setState({\n          isEditing: false,\n          editPost: null,\n          editLoading: false,\n          error: err\n        });\n      });\n    };\n\n    _this.statusInputChangeHandler = function (input, value) {\n      _this.setState({\n        status: value\n      });\n    };\n\n    _this.deletePostHandler = function (postId) {\n      _this.setState({\n        postsLoading: true\n      });\n\n      fetch('http://localhost:8080/feed/post/' + postId, {\n        method: 'DELETE',\n        headers: {\n          Authorization: 'Bearer ' + _this.props.token\n        }\n      }).then(function (res) {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Deleting a post failed!');\n        }\n\n        return res.json();\n      }).then(function (resData) {\n        console.log(resData);\n\n        _this.loadPosts(); // this.setState(prevState => {\n        //   const updatedPosts = prevState.posts.filter(p => p._id !== postId);\n        //   return { posts: updatedPosts, postsLoading: false };\n        // });\n\n      }).catch(function (err) {\n        console.log(err);\n\n        _this.setState({\n          postsLoading: false\n        });\n      });\n    };\n\n    _this.errorHandler = function () {\n      _this.setState({\n        error: null\n      });\n    };\n\n    _this.catchError = function (error) {\n      _this.setState({\n        error: error\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Feed, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://localhost:8080/auth/status', {\n        headers: {\n          Authorization: 'Bearer ' + this.props.token\n        }\n      }).then(function (res) {\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch user status.');\n        }\n\n        return res.json();\n      }).then(function (resData) {\n        _this2.setState({\n          status: resData.status\n        });\n      }).catch(this.catchError);\n      this.loadPosts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ErrorHandler, {\n        error: this.state.error,\n        onHandle: this.errorHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(FeedEdit, {\n        editing: this.state.isEditing,\n        selectedPost: this.state.editPost,\n        loading: this.state.editLoading,\n        onCancelEdit: this.cancelEditHandler,\n        onFinishEdit: this.finishEditHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"feed__status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.statusUpdateHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        placeholder: \"Your status\",\n        control: \"input\",\n        onChange: this.statusInputChangeHandler,\n        value: this.state.status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        mode: \"flat\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }\n      }, \"Update\"))), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"feed__control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        mode: \"raised\",\n        design: \"accent\",\n        onClick: this.newPostHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }\n      }, \"New Post\")), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"feed\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 9\n        }\n      }, this.state.postsLoading && /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: 'center',\n          marginTop: '2rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Loader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 15\n        }\n      })), this.state.posts.length <= 0 && !this.state.postsLoading ? /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }\n      }, \"No posts found.\") : null, !this.state.postsLoading && /*#__PURE__*/React.createElement(Paginator, {\n        onPrevious: this.loadPosts.bind(this, 'previous'),\n        onNext: this.loadPosts.bind(this, 'next'),\n        lastPage: Math.ceil(this.state.totalPosts / 2),\n        currentPage: this.state.postPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }\n      }, this.state.posts.map(function (post) {\n        return /*#__PURE__*/React.createElement(Post, {\n          key: post._id,\n          id: post._id,\n          author: post.creator.name,\n          date: new Date(post.createdAt).toLocaleDateString('en-US'),\n          title: post.title,\n          image: post.imageUrl,\n          content: post.content,\n          onStartEdit: _this3.startEditPostHandler.bind(_this3, post._id),\n          onDelete: _this3.deletePostHandler.bind(_this3, post._id),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }\n        });\n      }))));\n    }\n  }]);\n\n  return Feed;\n}(Component);\n\nexport default Feed;","map":{"version":3,"names":["React","Component","Fragment","Post","Button","FeedEdit","Input","Paginator","Loader","ErrorHandler","Feed","state","isEditing","posts","totalPosts","editPost","status","postPage","postsLoading","editLoading","loadPosts","direction","setState","page","graphqlQuery","query","fetch","method","headers","Authorization","props","token","body","JSON","stringify","then","res","json","resData","errors","Error","data","map","post","imagePath","imageUrl","catch","catchError","statusUpdateHandler","event","preventDefault","console","log","newPostHandler","startEditPostHandler","postId","prevState","loadedPost","find","p","_id","cancelEditHandler","finishEditHandler","postData","formData","FormData","append","title","content","image","createPost","creator","createdAt","updatedPosts","postIndex","findIndex","pop","unshift","err","error","statusInputChangeHandler","input","value","deletePostHandler","errorHandler","textAlign","marginTop","length","bind","Math","ceil","name","Date","toLocaleDateString"],"sources":["D:/Doranco/Node.js/Projets/RestApi/Api/src/pages/Feed/Feed.js"],"sourcesContent":["import React, { Component, Fragment } from 'react';\n\nimport Post from '../../components/Feed/Post/Post';\nimport Button from '../../components/Button/Button';\nimport FeedEdit from '../../components/Feed/FeedEdit/FeedEdit';\nimport Input from '../../components/Form/Input/Input';\nimport Paginator from '../../components/Paginator/Paginator';\nimport Loader from '../../components/Loader/Loader';\nimport ErrorHandler from '../../components/ErrorHandler/ErrorHandler';\nimport './Feed.css';\n\nclass Feed extends Component {\n  state = {\n    isEditing: false,\n    posts: [],\n    totalPosts: 0,\n    editPost: null,\n    status: '',\n    postPage: 1,\n    postsLoading: true,\n    editLoading: false\n  };\n\n  componentDidMount() {\n    fetch('http://localhost:8080/auth/status', {\n      headers: {\n        Authorization: 'Bearer ' + this.props.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch user status.');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.setState({ status: resData.status });\n      })\n      .catch(this.catchError);\n\n    this.loadPosts();\n  }\n\n  loadPosts = direction => {\n    if (direction) {\n      this.setState({ postsLoading: true, posts: [] });\n    }\n    let page = this.state.postPage;\n    if (direction === 'next') {\n      page++;\n      this.setState({ postPage: page });\n    }\n    if (direction === 'previous') {\n      page--;\n      this.setState({ postPage: page });\n    }\n    const graphqlQuery = {\n      query: `\n        {\n          posts(page: ${page}) {\n            posts {\n              _id\n              title\n              content\n              creator {\n                name\n              }\n              createdAt\n            }\n            totalPosts\n          }\n        }\n      `\n    };\n    fetch('http://localhost:8080/graphql', {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(graphqlQuery)\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.errors) {\n          throw new Error('Fetching posts failed!');\n        }\n        this.setState({\n          posts: resData.data.posts.posts.map(post => {\n            return {\n              ...post,\n              imagePath: post.imageUrl\n            };\n          }),\n          totalPosts: resData.data.posts.totalPosts,\n          postsLoading: false\n        });\n      })\n      .catch(this.catchError);\n  };\n\n  statusUpdateHandler = event => {\n    event.preventDefault();\n    fetch('http://localhost:8080/auth/status', {\n      method: 'PATCH',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        status: this.state.status\n      })\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Can't update status!\");\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n      })\n      .catch(this.catchError);\n  };\n\n  newPostHandler = () => {\n    this.setState({ isEditing: true });\n  };\n\n  startEditPostHandler = postId => {\n    this.setState(prevState => {\n      const loadedPost = { ...prevState.posts.find(p => p._id === postId) };\n\n      return {\n        isEditing: true,\n        editPost: loadedPost\n      };\n    });\n  };\n\n  cancelEditHandler = () => {\n    this.setState({ isEditing: false, editPost: null });\n  };\n\n  finishEditHandler = postData => {\n    this.setState({\n      editLoading: true\n    });\n    const formData = new FormData();\n    formData.append('title', postData.title);\n    formData.append('content', postData.content);\n    formData.append('image', postData.image);\n\n    let graphqlQuery = {\n      query: `\n        mutation {\n          createPost(postInput: {title: \"${postData.title}\", content: \"${\n        postData.content\n      }\", imageUrl: \"some url\"}) {\n            _id\n            title\n            content\n            imageUrl\n            creator {\n              name\n            }\n            createdAt\n          }\n        }\n      `\n    };\n\n    fetch('http://localhost:8080/graphql', {\n      method: 'POST',\n      body: JSON.stringify(graphqlQuery),\n      headers: {\n        Authorization: 'Bearer ' + this.props.token,\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.errors && resData.errors[0].status === 422) {\n          throw new Error(\n            \"Validation failed. Make sure the email address isn't used yet!\"\n          );\n        }\n        if (resData.errors) {\n          throw new Error('User login failed!');\n        }\n        console.log(resData);\n        const post = {\n          _id: resData.data.createPost._id,\n          title: resData.data.createPost.title,\n          content: resData.data.createPost.content,\n          creator: resData.data.createPost.creator,\n          createdAt: resData.data.createPost.createdAt\n        };\n        this.setState(prevState => {\n          let updatedPosts = [...prevState.posts];\n          if (prevState.editPost) {\n            const postIndex = prevState.posts.findIndex(\n              p => p._id === prevState.editPost._id\n            );\n            updatedPosts[postIndex] = post;\n          } else {\n            updatedPosts.pop();\n            updatedPosts.unshift(post);\n          }\n          return {\n            posts: updatedPosts,\n            isEditing: false,\n            editPost: null,\n            editLoading: false\n          };\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          isEditing: false,\n          editPost: null,\n          editLoading: false,\n          error: err\n        });\n      });\n  };\n\n  statusInputChangeHandler = (input, value) => {\n    this.setState({ status: value });\n  };\n\n  deletePostHandler = postId => {\n    this.setState({ postsLoading: true });\n    fetch('http://localhost:8080/feed/post/' + postId, {\n      method: 'DELETE',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Deleting a post failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n        this.loadPosts();\n        // this.setState(prevState => {\n        //   const updatedPosts = prevState.posts.filter(p => p._id !== postId);\n        //   return { posts: updatedPosts, postsLoading: false };\n        // });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ postsLoading: false });\n      });\n  };\n\n  errorHandler = () => {\n    this.setState({ error: null });\n  };\n\n  catchError = error => {\n    this.setState({ error: error });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n        <FeedEdit\n          editing={this.state.isEditing}\n          selectedPost={this.state.editPost}\n          loading={this.state.editLoading}\n          onCancelEdit={this.cancelEditHandler}\n          onFinishEdit={this.finishEditHandler}\n        />\n        <section className=\"feed__status\">\n          <form onSubmit={this.statusUpdateHandler}>\n            <Input\n              type=\"text\"\n              placeholder=\"Your status\"\n              control=\"input\"\n              onChange={this.statusInputChangeHandler}\n              value={this.state.status}\n            />\n            <Button mode=\"flat\" type=\"submit\">\n              Update\n            </Button>\n          </form>\n        </section>\n        <section className=\"feed__control\">\n          <Button mode=\"raised\" design=\"accent\" onClick={this.newPostHandler}>\n            New Post\n          </Button>\n        </section>\n        <section className=\"feed\">\n          {this.state.postsLoading && (\n            <div style={{ textAlign: 'center', marginTop: '2rem' }}>\n              <Loader />\n            </div>\n          )}\n          {this.state.posts.length <= 0 && !this.state.postsLoading ? (\n            <p style={{ textAlign: 'center' }}>No posts found.</p>\n          ) : null}\n          {!this.state.postsLoading && (\n            <Paginator\n              onPrevious={this.loadPosts.bind(this, 'previous')}\n              onNext={this.loadPosts.bind(this, 'next')}\n              lastPage={Math.ceil(this.state.totalPosts / 2)}\n              currentPage={this.state.postPage}\n            >\n              {this.state.posts.map(post => (\n                <Post\n                  key={post._id}\n                  id={post._id}\n                  author={post.creator.name}\n                  date={new Date(post.createdAt).toLocaleDateString('en-US')}\n                  title={post.title}\n                  image={post.imageUrl}\n                  content={post.content}\n                  onStartEdit={this.startEditPostHandler.bind(this, post._id)}\n                  onDelete={this.deletePostHandler.bind(this, post._id)}\n                />\n              ))}\n            </Paginator>\n          )}\n        </section>\n      </Fragment>\n    );\n  }\n}\n\nexport default Feed;\n"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,IAAP,MAAiB,iCAAjB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,QAAP,MAAqB,yCAArB;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAO,YAAP;;IAEMC,I;;;;;;;;;;;;;;;UACJC,K,GAAQ;MACNC,SAAS,EAAE,KADL;MAENC,KAAK,EAAE,EAFD;MAGNC,UAAU,EAAE,CAHN;MAINC,QAAQ,EAAE,IAJJ;MAKNC,MAAM,EAAE,EALF;MAMNC,QAAQ,EAAE,CANJ;MAONC,YAAY,EAAE,IAPR;MAQNC,WAAW,EAAE;IARP,C;;UA+BRC,S,GAAY,UAAAC,SAAS,EAAI;MACvB,IAAIA,SAAJ,EAAe;QACb,MAAKC,QAAL,CAAc;UAAEJ,YAAY,EAAE,IAAhB;UAAsBL,KAAK,EAAE;QAA7B,CAAd;MACD;;MACD,IAAIU,IAAI,GAAG,MAAKZ,KAAL,CAAWM,QAAtB;;MACA,IAAII,SAAS,KAAK,MAAlB,EAA0B;QACxBE,IAAI;;QACJ,MAAKD,QAAL,CAAc;UAAEL,QAAQ,EAAEM;QAAZ,CAAd;MACD;;MACD,IAAIF,SAAS,KAAK,UAAlB,EAA8B;QAC5BE,IAAI;;QACJ,MAAKD,QAAL,CAAc;UAAEL,QAAQ,EAAEM;QAAZ,CAAd;MACD;;MACD,IAAMC,YAAY,GAAG;QACnBC,KAAK,+CAEaF,IAFb;MADc,CAArB;MAkBAG,KAAK,CAAC,+BAAD,EAAkC;QACrCC,MAAM,EAAE,MAD6B;QAErCC,OAAO,EAAE;UACPC,aAAa,EAAE,YAAY,MAAKC,KAAL,CAAWC,KAD/B;UAEP,gBAAgB;QAFT,CAF4B;QAMrCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,YAAf;MAN+B,CAAlC,CAAL,CAQGW,IARH,CAQQ,UAAAC,GAAG,EAAI;QACX,OAAOA,GAAG,CAACC,IAAJ,EAAP;MACD,CAVH,EAWGF,IAXH,CAWQ,UAAAG,OAAO,EAAI;QACf,IAAIA,OAAO,CAACC,MAAZ,EAAoB;UAClB,MAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;QACD;;QACD,MAAKlB,QAAL,CAAc;UACZT,KAAK,EAAEyB,OAAO,CAACG,IAAR,CAAa5B,KAAb,CAAmBA,KAAnB,CAAyB6B,GAAzB,CAA6B,UAAAC,IAAI,EAAI;YAC1C,yBACKA,IADL;cAEEC,SAAS,EAAED,IAAI,CAACE;YAFlB;UAID,CALM,CADK;UAOZ/B,UAAU,EAAEwB,OAAO,CAACG,IAAR,CAAa5B,KAAb,CAAmBC,UAPnB;UAQZI,YAAY,EAAE;QARF,CAAd;MAUD,CAzBH,EA0BG4B,KA1BH,CA0BS,MAAKC,UA1Bd;IA2BD,C;;UAEDC,mB,GAAsB,UAAAC,KAAK,EAAI;MAC7BA,KAAK,CAACC,cAAN;MACAxB,KAAK,CAAC,mCAAD,EAAsC;QACzCC,MAAM,EAAE,OADiC;QAEzCC,OAAO,EAAE;UACPC,aAAa,EAAE,YAAY,MAAKC,KAAL,CAAWC,KAD/B;UAEP,gBAAgB;QAFT,CAFgC;QAMzCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UACnBlB,MAAM,EAAE,MAAKL,KAAL,CAAWK;QADA,CAAf;MANmC,CAAtC,CAAL,CAUGmB,IAVH,CAUQ,UAAAC,GAAG,EAAI;QACX,IAAIA,GAAG,CAACpB,MAAJ,KAAe,GAAf,IAAsBoB,GAAG,CAACpB,MAAJ,KAAe,GAAzC,EAA8C;UAC5C,MAAM,IAAIwB,KAAJ,CAAU,sBAAV,CAAN;QACD;;QACD,OAAOJ,GAAG,CAACC,IAAJ,EAAP;MACD,CAfH,EAgBGF,IAhBH,CAgBQ,UAAAG,OAAO,EAAI;QACfa,OAAO,CAACC,GAAR,CAAYd,OAAZ;MACD,CAlBH,EAmBGQ,KAnBH,CAmBS,MAAKC,UAnBd;IAoBD,C;;UAEDM,c,GAAiB,YAAM;MACrB,MAAK/B,QAAL,CAAc;QAAEV,SAAS,EAAE;MAAb,CAAd;IACD,C;;UAED0C,oB,GAAuB,UAAAC,MAAM,EAAI;MAC/B,MAAKjC,QAAL,CAAc,UAAAkC,SAAS,EAAI;QACzB,IAAMC,UAAU,qBAAQD,SAAS,CAAC3C,KAAV,CAAgB6C,IAAhB,CAAqB,UAAAC,CAAC;UAAA,OAAIA,CAAC,CAACC,GAAF,KAAUL,MAAd;QAAA,CAAtB,CAAR,CAAhB;;QAEA,OAAO;UACL3C,SAAS,EAAE,IADN;UAELG,QAAQ,EAAE0C;QAFL,CAAP;MAID,CAPD;IAQD,C;;UAEDI,iB,GAAoB,YAAM;MACxB,MAAKvC,QAAL,CAAc;QAAEV,SAAS,EAAE,KAAb;QAAoBG,QAAQ,EAAE;MAA9B,CAAd;IACD,C;;UAED+C,iB,GAAoB,UAAAC,QAAQ,EAAI;MAC9B,MAAKzC,QAAL,CAAc;QACZH,WAAW,EAAE;MADD,CAAd;;MAGA,IAAM6C,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;MACAD,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBH,QAAQ,CAACI,KAAlC;MACAH,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BH,QAAQ,CAACK,OAApC;MACAJ,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBH,QAAQ,CAACM,KAAlC;MAEA,IAAI7C,YAAY,GAAG;QACjBC,KAAK,4EAEgCsC,QAAQ,CAACI,KAFzC,4BAGHJ,QAAQ,CAACK,OAHN;MADY,CAAnB;MAmBA1C,KAAK,CAAC,+BAAD,EAAkC;QACrCC,MAAM,EAAE,MAD6B;QAErCK,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,YAAf,CAF+B;QAGrCI,OAAO,EAAE;UACPC,aAAa,EAAE,YAAY,MAAKC,KAAL,CAAWC,KAD/B;UAEP,gBAAgB;QAFT;MAH4B,CAAlC,CAAL,CAQGI,IARH,CAQQ,UAAAC,GAAG,EAAI;QACX,OAAOA,GAAG,CAACC,IAAJ,EAAP;MACD,CAVH,EAWGF,IAXH,CAWQ,UAAAG,OAAO,EAAI;QACf,IAAIA,OAAO,CAACC,MAAR,IAAkBD,OAAO,CAACC,MAAR,CAAe,CAAf,EAAkBvB,MAAlB,KAA6B,GAAnD,EAAwD;UACtD,MAAM,IAAIwB,KAAJ,CACJ,gEADI,CAAN;QAGD;;QACD,IAAIF,OAAO,CAACC,MAAZ,EAAoB;UAClB,MAAM,IAAIC,KAAJ,CAAU,oBAAV,CAAN;QACD;;QACDW,OAAO,CAACC,GAAR,CAAYd,OAAZ;QACA,IAAMK,IAAI,GAAG;UACXiB,GAAG,EAAEtB,OAAO,CAACG,IAAR,CAAa6B,UAAb,CAAwBV,GADlB;UAEXO,KAAK,EAAE7B,OAAO,CAACG,IAAR,CAAa6B,UAAb,CAAwBH,KAFpB;UAGXC,OAAO,EAAE9B,OAAO,CAACG,IAAR,CAAa6B,UAAb,CAAwBF,OAHtB;UAIXG,OAAO,EAAEjC,OAAO,CAACG,IAAR,CAAa6B,UAAb,CAAwBC,OAJtB;UAKXC,SAAS,EAAElC,OAAO,CAACG,IAAR,CAAa6B,UAAb,CAAwBE;QALxB,CAAb;;QAOA,MAAKlD,QAAL,CAAc,UAAAkC,SAAS,EAAI;UACzB,IAAIiB,YAAY,sBAAOjB,SAAS,CAAC3C,KAAjB,CAAhB;;UACA,IAAI2C,SAAS,CAACzC,QAAd,EAAwB;YACtB,IAAM2D,SAAS,GAAGlB,SAAS,CAAC3C,KAAV,CAAgB8D,SAAhB,CAChB,UAAAhB,CAAC;cAAA,OAAIA,CAAC,CAACC,GAAF,KAAUJ,SAAS,CAACzC,QAAV,CAAmB6C,GAAjC;YAAA,CADe,CAAlB;YAGAa,YAAY,CAACC,SAAD,CAAZ,GAA0B/B,IAA1B;UACD,CALD,MAKO;YACL8B,YAAY,CAACG,GAAb;YACAH,YAAY,CAACI,OAAb,CAAqBlC,IAArB;UACD;;UACD,OAAO;YACL9B,KAAK,EAAE4D,YADF;YAEL7D,SAAS,EAAE,KAFN;YAGLG,QAAQ,EAAE,IAHL;YAILI,WAAW,EAAE;UAJR,CAAP;QAMD,CAjBD;MAkBD,CA9CH,EA+CG2B,KA/CH,CA+CS,UAAAgC,GAAG,EAAI;QACZ3B,OAAO,CAACC,GAAR,CAAY0B,GAAZ;;QACA,MAAKxD,QAAL,CAAc;UACZV,SAAS,EAAE,KADC;UAEZG,QAAQ,EAAE,IAFE;UAGZI,WAAW,EAAE,KAHD;UAIZ4D,KAAK,EAAED;QAJK,CAAd;MAMD,CAvDH;IAwDD,C;;UAEDE,wB,GAA2B,UAACC,KAAD,EAAQC,KAAR,EAAkB;MAC3C,MAAK5D,QAAL,CAAc;QAAEN,MAAM,EAAEkE;MAAV,CAAd;IACD,C;;UAEDC,iB,GAAoB,UAAA5B,MAAM,EAAI;MAC5B,MAAKjC,QAAL,CAAc;QAAEJ,YAAY,EAAE;MAAhB,CAAd;;MACAQ,KAAK,CAAC,qCAAqC6B,MAAtC,EAA8C;QACjD5B,MAAM,EAAE,QADyC;QAEjDC,OAAO,EAAE;UACPC,aAAa,EAAE,YAAY,MAAKC,KAAL,CAAWC;QAD/B;MAFwC,CAA9C,CAAL,CAMGI,IANH,CAMQ,UAAAC,GAAG,EAAI;QACX,IAAIA,GAAG,CAACpB,MAAJ,KAAe,GAAf,IAAsBoB,GAAG,CAACpB,MAAJ,KAAe,GAAzC,EAA8C;UAC5C,MAAM,IAAIwB,KAAJ,CAAU,yBAAV,CAAN;QACD;;QACD,OAAOJ,GAAG,CAACC,IAAJ,EAAP;MACD,CAXH,EAYGF,IAZH,CAYQ,UAAAG,OAAO,EAAI;QACfa,OAAO,CAACC,GAAR,CAAYd,OAAZ;;QACA,MAAKlB,SAAL,GAFe,CAGf;QACA;QACA;QACA;;MACD,CAnBH,EAoBG0B,KApBH,CAoBS,UAAAgC,GAAG,EAAI;QACZ3B,OAAO,CAACC,GAAR,CAAY0B,GAAZ;;QACA,MAAKxD,QAAL,CAAc;UAAEJ,YAAY,EAAE;QAAhB,CAAd;MACD,CAvBH;IAwBD,C;;UAEDkE,Y,GAAe,YAAM;MACnB,MAAK9D,QAAL,CAAc;QAAEyD,KAAK,EAAE;MAAT,CAAd;IACD,C;;UAEDhC,U,GAAa,UAAAgC,KAAK,EAAI;MACpB,MAAKzD,QAAL,CAAc;QAAEyD,KAAK,EAAEA;MAAT,CAAd;IACD,C;;;;;;;wCAvPmB;MAAA;;MAClBrD,KAAK,CAAC,mCAAD,EAAsC;QACzCE,OAAO,EAAE;UACPC,aAAa,EAAE,YAAY,KAAKC,KAAL,CAAWC;QAD/B;MADgC,CAAtC,CAAL,CAKGI,IALH,CAKQ,UAAAC,GAAG,EAAI;QACX,IAAIA,GAAG,CAACpB,MAAJ,KAAe,GAAnB,EAAwB;UACtB,MAAM,IAAIwB,KAAJ,CAAU,8BAAV,CAAN;QACD;;QACD,OAAOJ,GAAG,CAACC,IAAJ,EAAP;MACD,CAVH,EAWGF,IAXH,CAWQ,UAAAG,OAAO,EAAI;QACf,MAAI,CAAChB,QAAL,CAAc;UAAEN,MAAM,EAAEsB,OAAO,CAACtB;QAAlB,CAAd;MACD,CAbH,EAcG8B,KAdH,CAcS,KAAKC,UAdd;MAgBA,KAAK3B,SAAL;IACD;;;6BAuOQ;MAAA;;MACP,oBACE,oBAAC,QAAD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE,oBAAC,YAAD;QAAc,KAAK,EAAE,KAAKT,KAAL,CAAWoE,KAAhC;QAAuC,QAAQ,EAAE,KAAKK,YAAtD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADF,eAEE,oBAAC,QAAD;QACE,OAAO,EAAE,KAAKzE,KAAL,CAAWC,SADtB;QAEE,YAAY,EAAE,KAAKD,KAAL,CAAWI,QAF3B;QAGE,OAAO,EAAE,KAAKJ,KAAL,CAAWQ,WAHtB;QAIE,YAAY,EAAE,KAAK0C,iBAJrB;QAKE,YAAY,EAAE,KAAKC,iBALrB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAFF,eASE;QAAS,SAAS,EAAC,cAAnB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE;QAAM,QAAQ,EAAE,KAAKd,mBAArB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE,oBAAC,KAAD;QACE,IAAI,EAAC,MADP;QAEE,WAAW,EAAC,aAFd;QAGE,OAAO,EAAC,OAHV;QAIE,QAAQ,EAAE,KAAKgC,wBAJjB;QAKE,KAAK,EAAE,KAAKrE,KAAL,CAAWK,MALpB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADF,eAQE,oBAAC,MAAD;QAAQ,IAAI,EAAC,MAAb;QAAoB,IAAI,EAAC,QAAzB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,YARF,CADF,CATF,eAuBE;QAAS,SAAS,EAAC,eAAnB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE,oBAAC,MAAD;QAAQ,IAAI,EAAC,QAAb;QAAsB,MAAM,EAAC,QAA7B;QAAsC,OAAO,EAAE,KAAKqC,cAApD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,cADF,CAvBF,eA4BE;QAAS,SAAS,EAAC,MAAnB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACG,KAAK1C,KAAL,CAAWO,YAAX,iBACC;QAAK,KAAK,EAAE;UAAEmE,SAAS,EAAE,QAAb;UAAuBC,SAAS,EAAE;QAAlC,CAAZ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE,oBAAC,MAAD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADF,CAFJ,EAMG,KAAK3E,KAAL,CAAWE,KAAX,CAAiB0E,MAAjB,IAA2B,CAA3B,IAAgC,CAAC,KAAK5E,KAAL,CAAWO,YAA5C,gBACC;QAAG,KAAK,EAAE;UAAEmE,SAAS,EAAE;QAAb,CAAV;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,qBADD,GAEG,IARN,EASG,CAAC,KAAK1E,KAAL,CAAWO,YAAZ,iBACC,oBAAC,SAAD;QACE,UAAU,EAAE,KAAKE,SAAL,CAAeoE,IAAf,CAAoB,IAApB,EAA0B,UAA1B,CADd;QAEE,MAAM,EAAE,KAAKpE,SAAL,CAAeoE,IAAf,CAAoB,IAApB,EAA0B,MAA1B,CAFV;QAGE,QAAQ,EAAEC,IAAI,CAACC,IAAL,CAAU,KAAK/E,KAAL,CAAWG,UAAX,GAAwB,CAAlC,CAHZ;QAIE,WAAW,EAAE,KAAKH,KAAL,CAAWM,QAJ1B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAMG,KAAKN,KAAL,CAAWE,KAAX,CAAiB6B,GAAjB,CAAqB,UAAAC,IAAI;QAAA,oBACxB,oBAAC,IAAD;UACE,GAAG,EAAEA,IAAI,CAACiB,GADZ;UAEE,EAAE,EAAEjB,IAAI,CAACiB,GAFX;UAGE,MAAM,EAAEjB,IAAI,CAAC4B,OAAL,CAAaoB,IAHvB;UAIE,IAAI,EAAE,IAAIC,IAAJ,CAASjD,IAAI,CAAC6B,SAAd,EAAyBqB,kBAAzB,CAA4C,OAA5C,CAJR;UAKE,KAAK,EAAElD,IAAI,CAACwB,KALd;UAME,KAAK,EAAExB,IAAI,CAACE,QANd;UAOE,OAAO,EAAEF,IAAI,CAACyB,OAPhB;UAQE,WAAW,EAAE,MAAI,CAACd,oBAAL,CAA0BkC,IAA1B,CAA+B,MAA/B,EAAqC7C,IAAI,CAACiB,GAA1C,CARf;UASE,QAAQ,EAAE,MAAI,CAACuB,iBAAL,CAAuBK,IAAvB,CAA4B,MAA5B,EAAkC7C,IAAI,CAACiB,GAAvC,CATZ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EADwB;MAAA,CAAzB,CANH,CAVJ,CA5BF,CADF;IA+DD;;;;EArUgB3D,S;;AAwUnB,eAAeS,IAAf"},"metadata":{},"sourceType":"module"}