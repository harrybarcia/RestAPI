{"ast":null,"code":"import _classCallCheck from \"D:\\\\Doranco\\\\Node.js\\\\Projets\\\\RestApi\\\\Api\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Doranco\\\\Node.js\\\\Projets\\\\RestApi\\\\Api\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Doranco\\\\Node.js\\\\Projets\\\\RestApi\\\\Api\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Doranco\\\\Node.js\\\\Projets\\\\RestApi\\\\Api\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Doranco\\\\Node.js\\\\Projets\\\\RestApi\\\\Api\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Doranco\\\\Node.js\\\\Projets\\\\RestApi\\\\Api\\\\src\\\\pages\\\\Feed\\\\SinglePost\\\\SinglePost.js\";\nimport { graphql } from 'graphql';\nimport React, { Component } from 'react';\nimport Image from '../../../components/Image/Image';\nimport './SinglePost.css';\n\nvar SinglePost = /*#__PURE__*/function (_Component) {\n  _inherits(SinglePost, _Component);\n\n  function SinglePost() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SinglePost);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SinglePost)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      title: '',\n      author: '',\n      date: '',\n      image: '',\n      content: ''\n    };\n    return _this;\n  }\n\n  _createClass(SinglePost, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var postId = this.props.match.params.postId;\n      var graphqlQuery = {\n        query: \"\\n        {\\n          post(id: \\\"\".concat(postId, \"\\\") {\\n            title\\n            imageUrl\\n            content\\n            creator {\\n              name\\n            }\\n            createdAt\\n          }\\n        }\\n      \")\n      };\n      fetch('http://localhost:8080/graphql', {\n        method: 'POST',\n        headers: {\n          Authorization: 'Bearer ' + this.props.token\n        },\n        body: JSON.stringify(graphqlQuery)\n      }).then(function (res) {\n        return res.json();\n      }) // We wanna parse the data and check for errors\n      .then(function (resData) {\n        console.log(\"resData dans singlepost.js\");\n        console.log(resData);\n\n        if (resData.errors) {\n          throw new Error('Fetching post failed!');\n        }\n\n        _this2.setState({\n          title: resData.data.post.title,\n          author: resData.data.post.creator.name,\n          date: new Date(resData.data.post.createdAt).toLocaleDateString('en-US'),\n          content: resData.data.post.content,\n          image: 'http://localhost:8080/' + resData.data.post.imageUrl\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"section\", {\n        className: \"single-post\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, this.state.title), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, \"Created by \", this.state.author, \" on \", this.state.date), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"single-post__image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        contain: true,\n        imageUrl: this.state.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, this.state.content));\n    }\n  }]);\n\n  return SinglePost;\n}(Component);\n\nexport default SinglePost;","map":{"version":3,"names":["graphql","React","Component","Image","SinglePost","state","title","author","date","image","content","postId","props","match","params","graphqlQuery","query","fetch","method","headers","Authorization","token","body","JSON","stringify","then","res","json","resData","console","log","errors","Error","setState","data","post","creator","name","Date","createdAt","toLocaleDateString","imageUrl","catch","err"],"sources":["D:/Doranco/Node.js/Projets/RestApi/Api/src/pages/Feed/SinglePost/SinglePost.js"],"sourcesContent":["import { graphql } from 'graphql';\nimport React, { Component } from 'react';\n\nimport Image from '../../../components/Image/Image';\nimport './SinglePost.css';\n\nclass SinglePost extends Component {\n  state = {\n    title: '',\n    author: '',\n    date: '',\n    image: '',\n    content: ''\n  };\n\n  componentDidMount() {\n    const postId = this.props.match.params.postId;\n    const graphqlQuery = {\n      query: `\n        {\n          post(id: \"${postId}\") {\n            title\n            imageUrl\n            content\n            creator {\n              name\n            }\n            createdAt\n          }\n        }\n      `\n    \n    };\n    \n    fetch('http://localhost:8080/graphql', {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token\n      },\n      body: JSON.stringify(graphqlQuery) \n      }\n    )\n      .then(res => {\n        return res.json();\n      })\n      \n      // We wanna parse the data and check for errors\n      .then(resData => {\n        console.log(\"resData dans singlepost.js\");\n        console.log(resData);\n\n        if (resData.errors) {\n          throw new Error('Fetching post failed!');\n        }\n\n        this.setState({\n          title: resData.data.post.title,\n          author: resData.data.post.creator.name,\n          date: new Date(resData.data.post.createdAt).toLocaleDateString('en-US'),\n          content: resData.data.post.content,\n          image:'http://localhost:8080/'+resData.data.post.imageUrl\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    return (\n      <section className=\"single-post\">\n        <h1>{this.state.title}</h1>\n        <h2>\n          Created by {this.state.author} on {this.state.date}\n        </h2>\n        <div className=\"single-post__image\">\n          <Image contain imageUrl={this.state.image} />\n        </div>\n        <p>{this.state.content}</p>\n      </section>\n    );\n  }\n}\n\nexport default SinglePost;\n"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,SAAxB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAO,kBAAP;;IAEMC,U;;;;;;;;;;;;;;;UACJC,K,GAAQ;MACNC,KAAK,EAAE,EADD;MAENC,MAAM,EAAE,EAFF;MAGNC,IAAI,EAAE,EAHA;MAINC,KAAK,EAAE,EAJD;MAKNC,OAAO,EAAE;IALH,C;;;;;;wCAQY;MAAA;;MAClB,IAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAAvC;MACA,IAAMI,YAAY,GAAG;QACnBC,KAAK,8CAEWL,MAFX;MADc,CAArB;MAiBAM,KAAK,CAAC,+BAAD,EAAkC;QACrCC,MAAM,EAAE,MAD6B;QAErCC,OAAO,EAAE;UACPC,aAAa,EAAE,YAAY,KAAKR,KAAL,CAAWS;QAD/B,CAF4B;QAKrCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,YAAf;MAL+B,CAAlC,CAAL,CAQGU,IARH,CAQQ,UAAAC,GAAG,EAAI;QACX,OAAOA,GAAG,CAACC,IAAJ,EAAP;MACD,CAVH,EAYE;MAZF,CAaGF,IAbH,CAaQ,UAAAG,OAAO,EAAI;QACfC,OAAO,CAACC,GAAR,CAAY,4BAAZ;QACAD,OAAO,CAACC,GAAR,CAAYF,OAAZ;;QAEA,IAAIA,OAAO,CAACG,MAAZ,EAAoB;UAClB,MAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;QACD;;QAED,MAAI,CAACC,QAAL,CAAc;UACZ3B,KAAK,EAAEsB,OAAO,CAACM,IAAR,CAAaC,IAAb,CAAkB7B,KADb;UAEZC,MAAM,EAAEqB,OAAO,CAACM,IAAR,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BC,IAFtB;UAGZ7B,IAAI,EAAE,IAAI8B,IAAJ,CAASV,OAAO,CAACM,IAAR,CAAaC,IAAb,CAAkBI,SAA3B,EAAsCC,kBAAtC,CAAyD,OAAzD,CAHM;UAIZ9B,OAAO,EAAEkB,OAAO,CAACM,IAAR,CAAaC,IAAb,CAAkBzB,OAJf;UAKZD,KAAK,EAAC,2BAAyBmB,OAAO,CAACM,IAAR,CAAaC,IAAb,CAAkBM;QALrC,CAAd;MAOD,CA5BH,EA6BGC,KA7BH,CA6BS,UAAAC,GAAG,EAAI;QACZd,OAAO,CAACC,GAAR,CAAYa,GAAZ;MACD,CA/BH;IAgCD;;;6BAEQ;MACP,oBACE;QAAS,SAAS,EAAC,aAAnB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAK,KAAKtC,KAAL,CAAWC,KAAhB,CADF,eAEE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,kBACc,KAAKD,KAAL,CAAWE,MADzB,UACqC,KAAKF,KAAL,CAAWG,IADhD,CAFF,eAKE;QAAK,SAAS,EAAC,oBAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE,oBAAC,KAAD;QAAO,OAAO,MAAd;QAAe,QAAQ,EAAE,KAAKH,KAAL,CAAWI,KAApC;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADF,CALF,eAQE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAI,KAAKJ,KAAL,CAAWK,OAAf,CARF,CADF;IAYD;;;;EA3EsBR,S;;AA8EzB,eAAeE,UAAf"},"metadata":{},"sourceType":"module"}